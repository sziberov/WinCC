local app = application.Create(os.getProcessInfo(os.getCurrentProcess()), os)
local taskbar = form.Create("Taskbar")
local processCount = 0
local refreshCount = 0
local useAM = true
local scroll = 0
local shouldScroll = false

app:addForm(taskbar, "Taskbar")
taskbar:show()

os.getProcessInfo(os.getCurrentProcess()).showInTaskbar = false


local time = widgets.Label.Create(taskbar, "Time")
time.width = 7
time.left = app.canvas.size.x - time.width + 2
time.top = 0
time.align = "right"
time.bgcolor = colors.lightBlue
time.forecolor = colors.white
time.onClick = function(sender)
	--if useAM then useAM = false else useAM = true end
end

time.onRefresh = function(sender)
	sender.caption = tostring(textutils.formatTime(os.time(), useAM)) .. "%"
end



local leftButton = widgets.Button.Create(taskbar, "leftButton")
leftButton.caption = "<"
leftButton.left = 5
leftButton.width = 1
leftButton.top = 0
leftButton.bgcolor = colors.lightBlue
leftButton.forecolor2 = colors.white
leftButton.onClick = function(sender)
	if shouldScroll then
		scroll = scroll + 37
		if scroll < -10 * (processCount - 1) + processCount - 1 then scroll = -10 * (processCount - 1) + processCount - 1 end
	end
end

local rightButton = widgets.Button.Create(taskbar, "rightButton")
rightButton.caption = ">"
rightButton.left = 10 + app.canvas.size.x - 9 - 6 - 2 + 1
rightButton.width = 1
rightButton.top = 0
rightButton.bgcolor = colors.lightBlue
rightButton.forecolor2 = colors.white
rightButton.onClick = function(sender)
	if shouldScroll then
		scroll = scroll - 37
		if scroll > 0 then scroll = 0 end
	end
end

local panel = widgets.Panel.Create(taskbar, "Panel")
panel.top = 0
panel.height = 2
panel.width = app.canvas.size.x - 9 - 6 - 2 + 4
panel.left = 6
panel.bgcolor = colors.lightBlue
--app.canvas:fillrect(1, 1, app.canvas.size.x, 1, colors.lightBlue)

panel.onRefresh = function(sender)
	local hwnds = os.getValidHWNDList(true)

	if processCount > 0 then
		for i = 0, processCount do
			sender.widgets["button_" .. tostring(i)] = nil
		end
	end





	if #hwnds > 6 then
		shouldScroll = true
		leftButton.visible = true
		rightButton.visible = true

		if processCount ~= #hwnds then
			scroll = -35
		end
	else
		shouldScroll = false
		leftButton.visible = false
		rightButton.visible = false
		scroll = 0
	end


	processCount = #hwnds
	sender.focusedWidget = nil




	for i, v in ipairs(hwnds) do
		local button = widgets.Button.Create(sender, "button_" .. tostring(i))
		local info = os.getProcessInfo(v)
		button.width = 5
		button.left = scroll + button.width * (i - 1) + i 
		button.caption = info.title
		button.tag = v
		button.align = "left"
		button.forecolor2 = colors.white
                button.forecolor = colors.white
                button.bgcolor = colors.lightBlue

		if v == os.getActiveProcess() then
			button.bgcolor = colors.blue
			button.forecolor = colors.white
			button.forecolor2 = colors.white
		end

		button.onClick = function(sender)
			os.setActiveProcess(sender.tag)
		end
	end
end


local startMenu = widgets.PopupMenu.Create()
startMenu.forecolor2 = colors.blue
startMenu.forecolor = colors.black
startMenu.bgcolor = colors.white
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("H      ShutDown >", function(sender) sdMenuOpen() end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("H----------------", nil))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HAbout System    ", function(sender) os.shell.run("winver.exe") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HRun App         ", function(sender) os.shell.run("exec.exe") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HControl Panel   ", function(sender) os.shell.run("control.exe") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HComputer        ", function(sender) os.shell.run("explorer.exe") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("H----------------", nil))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HPictures        ", function(sender) os.shell.run("explorer \"" .. os.getSystemPath() .. "/UserData/Pictures/\"") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HDocuments       ", function(sender) os.shell.run("explorer \"" .. os.getSystemPath() .. "/UserData/Documents/\"") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HPrograms        ", function(sender) os.shell.run("explorer \"" .. os.getSystemPath() .. "/UserData/AppData/StartMenu/Programs/\"") end))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("H----------------", nil))
table.insert(startMenu.items, widgets.PopupMenu.CreateItem("HWinCC 7         ", nil))

local sdMenu = widgets.PopupMenu.Create()
sdMenu.forecolor2 = colors.black
sdMenu.forecolor = colors.black
sdMenu.bgcolor = colors.white
table.insert(sdMenu.items, widgets.PopupMenu.CreateItem("ShutDown", function(sender) os.shell.shutdown() end))
table.insert(sdMenu.items, widgets.PopupMenu.CreateItem("Restart ", function(sender) os.shell.restart() end))

local start = widgets.Button.Create(taskbar, "Start")
start.left = 1
start.top = 0
start.width = 3
start.bgcolor = colors.blue
start.forecolor = colors.white
start.forecolor2 = colors.white
start.caption = " #"

start.onClick = function(sender)
	widgets.popupMenu(startMenu, 1, sender.parent:getCanvas().size.y)
end

sdMenuOpen = function(sender)
	--widgets.popupMenu(startMenu, 1, 17)
	widgets.popupMenu(sdMenu, 20, 17)
end

taskbar.onRefresh = function(sender)
	app.canvas:fillrect(1, 1, app.canvas.size.x, 1, colors.lightBlue)
end

taskbar.onTerminate = function(sender)
	return false
end


os.startTimer(0.05, function() taskbar:refresh() end )
app:run()
